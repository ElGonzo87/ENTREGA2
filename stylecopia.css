* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    text-decoration: none;
    list-style-type: none;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

:root {
    --bground: #E1DEE3;
    --fondologo: #010112;
    --linksnav: #9cb6a6;
    --hover: #045020;   
    --slogan: #023047; 
}

#bar {
    height: 30px;
    width: 30px;
}

.logo {
    width: 70px;
}

.header {
    height: 80px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0px 50px;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
    background-color: var(--bground);
    position: fixed;
    width: 100%;
}

.navbar ul {
    list-style: none;
    display: flex;
    gap: 100px;
}

.navbar {
    display: flex;
}

.navbar-link {
    text-decoration: none;
    color: black;
    font-weight: 300;
}


/*FIN DISEÑO NAV*/
/*COMIENZO DISEÑO HERO*/


h1 {
    color: var(--slogan);
    font-size: 45px;
    font-weight: 1000; 
    margin: 20px 0px;

    
}

p {
    color: #010112;
    font-size: 16px;
    font-weight: 600;
    
}

main {
    
    height: 1000px;
    padding: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    
    
}

.heroSection {
    display: flex;
    width: 100%;
    justify-content: center;
    gap: 100px;
    margin-top: 200px;
       
}

.presentacionHeader {
    width: 500px;
    
    
    
}

.heroFoto img {
    width: 300px;
    height: 300px;
    border-radius: 30px;
    
}

.heroFoto {
    border-radius: 20px;
    }

.acciones {
    display: flex;
    margin: 50px 0;
    gap: 20px;            
}

#action {
    background-color: #023047;
    color: white;
    font-weight: 500;
    padding: 8px 20px;
    border-radius: 20px;
    
}

.selector {
    background-color: white;
    color: black;
    font-weight: 500;
    padding: 8px 20px;
    border-radius: 20px;

}

/*Arranca cardSection*/

.cardSection {
    display: flex;
    flex-direction: column;
    width: 100%;
    align-items: center;
    gap: 20px;
    
    
}

.cardSection h2 {
    margin-top: 70px;
    

}

.cardContainer {
    display: flex;
    gap: 10px;
    align-items: center;
    max-width: 1000px;
    flex: 1 1 0;
    
}

.cardInfo {
   display: flex;
   flex-direction: column;
   gap: 5px;
   padding: 10px;
   flex: 1 1 0;
 
}


.carDesc {
    display: flex;
    flex-direction: column;
    align-items: center;
    font-size: 20px;
    font-weight: 400;
    overflow: hidden;
    text-overflow: ellipsis;

}

.carDesc h3 {
    margin-bottom: 8px;
    font-size: 20px;
    font-weight: 400;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
      
}

.carDesc p {
    text-align: center;
    
    font-size: 14px;
}

.cardInfo img {
    width: 300px;
    height: 300px;
    align-self: center;
}


/*Arranca diseño de card en el header*/

#loguito {
    width: 60px;
    height: 60px;
    border-radius: 10px;    
}

.carrito {
    height: 30px;
    width: 30px;
    margin-left: 20px;
}

/*PROGRAMACION DEL CARRITO*/
#cart-toggle {
    display: none;
}

.cart {
    padding: 0px;
    display: flex;
    background: var(--slogan);
    flex-direction: column;
    width: 340px;
    gap: 30px; /*acá abajo arrancaría el posicionamiento del cart*/
    position: absolute; /*posicion absoluta, esta parte me ubica al cart*/
    right: 0;
    top: 80px; /*esto es porque el height del header es 80 px, entonces esto hace que la card del carrito se ponga inmediatamente debajo del header*/
    padding: 20px;
    overflow: auto;/*esto es lo que me va a permitir scrollear el cart, tengo quedarle el overflow auto*/
    height: calc(100vh - 80px);/*le defino al cart un alto fijo que es los 100vh - 80px que es  y asignarle un height consistente en un calc que sea los 100vs de mi monitor - los 80px que mide mi header, o sea, oara que llegue hasta abajo de todo, digamos*/
    display: none;
}

.cart-product {
    display: flex;
    gap: 15px;
    border: 1px solid white;
    border-radius: 10px;
    padding: 20px;
    width: 300px;
    align-items: center;

}

.cart h3 {
    margin-bottom: 15px;
    color: white;
    font-weight: 500;
}

.cart-product p {
    font-size: 14px;
    color: gray;
    
}

.card-data span {
    font-weight: 800;
    background: linear-gradient(to right, #30cfd0, #c43ad6) text;
    color: transparent;

}

.cart-product h5 {
    color: white;
}


.cart-product-handler {
    display: flex;
    align-items: center;
    width: 80px;
    gap: 10px;
}


.cart-product-handler button {
    height: 30px;
    width: 30px;
    border-radius: 10px;
    border: 1px solid black;
    align-items: center;
    gap: 10px;
    
    
}

.cart-product-handler p {
    color: white;
    font-weight: 800;
    
}

hr {
    margin-top: 40px;
    border: 1px solid white;
}

#totales {
    color: white;
}

.cart-price {
    display: flex;
    justify-content: space-between;
}

#buy {
    background-color: blue;
    border: none;
    border-radius: 5px;
    padding: 10px;

}

/*ahora voy a programar la función de que cart se oculte o aparezca según apriete o no el carrito. Para ello, primero le pongo display none en el cart, para que por defecto no figure*/


#cart-toggle:checked + .cart {/*esto significa que el selector va a apuntar al  hermano de cart-toggle (que es la clase cart), y el :checked significa la condición: "si está checkeado el cart toggle, lo que tenga la clase .cart, que es el hermano de cart-toggle, va a tener alguna acción*/
    display: flex; /*más arriba escondí el .cart con un display none, entonces esto lo que hace es cambiarlo a flex cuando chequee el cart-toggle*/

}

#menu-toggle {/*con esto oculto el checkbox*/
    display: none;
}

.menu-toggle {/*con esto oculto el class menu toggle que es el icono de las bars, lo oculto por defecto para que despues con la media querie lo programe para que aparezca*/
    display: none;
    position: absolute;
    right: 60px; /*el position y el right hace que siempre se vea a la derecha el bar menu cuando achico*/
}

